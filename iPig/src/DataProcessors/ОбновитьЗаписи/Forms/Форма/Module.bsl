
&НаКлиенте
Процедура НачатьОбновление(Команда)
	ОткрытьЗаписиНаКлиенте()
КонецПроцедуры




&НаСервере
Функция ОткрытьЗаписиНаСервере(ВидРегистра,ДатаВвода = Ложь)
	
	Рег = РегистрыСведений[ВидРегистра]; 
	Выборка = Рег.Выбрать();
	мсДанные = Новый Массив;  
	Пока Выборка.Следующий() Цикл   
		КлючЗаписи = _НастройкиКонфигурацииНаСервере.КлючМенеджераЗаписиРС(Выборка);
		Если Выборка.ДатаВвода =  Дата(1,1,1) Тогда
			 МенеджерЗаписи=РегистрыСведений[ВидРегистра].СоздатьМенеджерЗаписи(); 
			 ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючЗаписи); 
			 МенеджерЗаписи.Удалить();
		ИначеЕсли НЕ (Час(Выборка.Период) = 0 И Минута(Выборка.Период) = 0 И Секунда(Выборка.Период) = 0) ИЛИ Выборка.НомерОпороса = 0  Тогда
			мсДанные.Добавить(КлючЗаписи);
		КонецЕсли;
	КонецЦикла;
	Возврат мсДанные;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьЗаписиНаКлиенте()	
	#Область ЖурналОсеменения
	мсДанные = ОткрытьЗаписиНаСервере("ЖурналОсеменения");  
	Для каждого ключЗаписи из мсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОсеменения.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта", ключЗаписи,Истина),,,,,,);
		Исключение 
			//Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
		КонецПопытки;		
	КонецЦикла;	
	#КонецОбласти  
	#Область ЖурналОсеменения
	мсДанные = ОткрытьЗаписиНаСервере("ЖурналОпороса");  
	Для каждого ключЗаписи из мсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОпороса.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта", ключЗаписи,Истина),,,,,,);
		Исключение 
			//Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
		КонецПопытки;		
	КонецЦикла;	
	#КонецОбласти  
	#Область ЖурналОтъема
	мсДанные = ОткрытьЗаписиНаСервере("ЖурналОтъема");  
	Для каждого ключЗаписи из мсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОтъема.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта", ключЗаписи,Истина),,,,,,);
		Исключение 
			//Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
		КонецПопытки;		
	КонецЦикла;	
	#КонецОбласти 
	#Область ЖурналСуппоросности
	мсДанные = ОткрытьЗаписиНаСервере("Супоросность");  
	Для каждого ключЗаписи из мсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.Супоросность.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта", ключЗаписи,Истина),,,,,,);
		Исключение 
			//Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
		КонецПопытки;		
	КонецЦикла;	
	#КонецОбласти
	
	Предупреждение("Обновление данных завершено",10,"Обновление данных");
КонецПроцедуры


&НаСервере
Функция ОбновитьСтатусыНаСервере()

	НаборЗаписей = РегистрыСведений.ПоследнееСобытие.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать(); 
	Если НаборЗаписей.Количество() <> 0  Тогда 
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
	КонецЕсли;            
	МассивЗаписей = Новый Массив;
	НаборЗаписей = РегистрыСведений.КарточкаСвиноматки.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать(); 
	Если НаборЗаписей.Количество() <> 0  Тогда 
		Для Каждого Запись ИЗ НаборЗаписей Цикл    
			СтруктураЗаписей = Новый Структура("НомерЖивотного, ДатаВвода", Запись.НомерЖивотного, Запись.Период);
			МассивЗаписей.Добавить(СтруктураЗаписей);
		КонецЦикла;
	КонецЕсли;
	Возврат МассивЗаписей;
КонецФункции


&НаКлиенте
Процедура ОбновитьСтатусы(Команда)
	ОбновитьСтатусыНаКлиенте();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыНаКлиенте() Экспорт
	
	Перем ВсегоЗаписей, Запись, НаборЗаписей, ТекущаяЗапись;
	
	НаборЗаписей = ОбновитьСтатусыНаСервере(); 
	ВсегоЗаписей = НаборЗаписей.Количество(); 
	ТекущаяЗапись = 0;
	Для Каждого Запись ИЗ НаборЗаписей Цикл
		_ОбработкаОповещенияНаКлиенте.ОткрытьФормуСвиноматки(Запись.НомерЖивотного, Запись.ДатаВвода);  
		ТекущаяЗапись = ТекущаяЗапись + 1;
		Индикатор = ТекущаяЗапись / ВсегоЗаписей * 100;      
		ОбновитьОтображениеДанных();
		
	КонецЦикла; 
	УстановитьЗначениеКонстантыНаСервере();

КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеКонстантыНаСервере()
	Константы.ЗапускОбработкиПриОбновлении.Установить(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	Если _НастройкиКонфигурацииНаСервере.ПолучитьДанныеОЗапускиОбработкиОбновления() Тогда
		ПодключитьОбработчикОжидания("ОбновитьСтатусыНаКлиенте",1,Истина);    
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеВводаНаСервере()
	НаборЗаписей = РегистрыСведений.КарточкаВнесенияДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать(); 
	Если НаборЗаписей.Количество() <> 0  Тогда 
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВвода(Команда)
	ОбновитьДанныеВводаНаСервере();
КонецПроцедуры

                    