#Область ОписаниеПеременных
&НаКлиенте
	Перем ТекстОшибки ;
#КонецОбласти


#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если _НастройкиКонфигурацииНаСервере.ПолучитьДанныеОЗапускиОбработкиОбновления() Тогда
		ПодключитьОбработчикОжидания("ОбновитьСтатусыНаКлиенте", 1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура НачатьОбновление(Команда)
	ОткрытьЗаписиНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусы(Команда)
	ОбновитьСтатусыНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВвода(Команда)
	ОбновитьДанныеВводаНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОткрытьЗаписиНаСервере(ВидРегистра, ДатаВвода = Ложь)

	Рег = РегистрыСведений[ВидРегистра];
	Выборка = Рег.Выбрать();
	МсДанные = Новый Массив;
	Пока Выборка.Следующий() Цикл
		КлючЗаписи = _НастройкиКонфигурацииНаСервере.КлючМенеджераЗаписиРС(Выборка);
		Если Выборка.ДатаВвода = Дата(1, 1, 1) Тогда
			МенеджерЗаписи=РегистрыСведений[ВидРегистра].СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючЗаписи);
			МенеджерЗаписи.Удалить();
		ИначеЕсли Не (Час(Выборка.Период) = 0 И Минута(Выборка.Период) = 0 И Секунда(Выборка.Период) = 0)
			Или Выборка.НомерОпороса = 0 Тогда
			МсДанные.Добавить(КлючЗаписи);
		КонецЕсли;
	КонецЦикла;
	Возврат МсДанные;

КонецФункции

&НаКлиенте
Процедура ОткрытьЗаписиНаКлиенте()
#Область ЖурналОсеменения
	МсДанные = ОткрытьЗаписиНаСервере("ЖурналОсеменения");
	Для Каждого ключЗаписи Из МсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОсеменения.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта",
				ключЗаписи, Истина), , , , , , );
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
#КонецОбласти

#Область ЖурналОсеменения
	МсДанные = ОткрытьЗаписиНаСервере("ЖурналОпороса");
	Для Каждого ключЗаписи Из МсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОпороса.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта",
				ключЗаписи, Истина), , , , , , );
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
#КонецОбласти

#Область ЖурналОтъема
	МсДанные = ОткрытьЗаписиНаСервере("ЖурналОтъема");
	Для Каждого ключЗаписи Из МсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.ЖурналОтъема.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта",
				ключЗаписи, Истина), , , , , , );
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
#КонецОбласти

#Область ЖурналСуппоросности
	МсДанные = ОткрытьЗаписиНаСервере("Супоросность");
	Для Каждого ключЗаписи Из МсДанные Цикл
		Попытка
			ОткрытьФорму("РегистрСведений.Супоросность.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта",
				ключЗаписи, Истина), , , , , , );
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
#КонецОбласти

#Если Не ВебКлиент Тогда
	Предупреждение("Обновление данных завершено", 10, "Обновление данных");
#КонецЕсли

КонецПроцедуры
&НаСервере
Функция ОбновитьСтатусыНаСервере()

	НаборЗаписей = РегистрыСведений.ПоследнееСобытие.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() <> 0 Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
	МассивЗаписей = Новый Массив;
	НаборЗаписей = РегистрыСведений.КарточкаСвиноматки.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() <> 0 Тогда
		Для Каждого Запись Из НаборЗаписей Цикл
			СтруктураЗаписей = Новый Структура("НомерЖивотного, ДатаВвода", Запись.НомерЖивотного, Запись.Период);
			МассивЗаписей.Добавить(СтруктураЗаписей);
		КонецЦикла;
	КонецЕсли;
	Возврат МассивЗаписей;
КонецФункции
&НаКлиенте
Процедура ОбновитьСтатусыНаКлиенте() Экспорт

	Перем ВсегоЗаписей, Запись, НаборЗаписей, ТекущаяЗапись;

	НаборЗаписей = ОбновитьСтатусыНаСервере();
	ВсегоЗаписей = НаборЗаписей.Количество();
	ТекущаяЗапись = 0;
	Для Каждого Запись Из НаборЗаписей Цикл
		_ОбработкаОповещенияНаКлиенте.ОткрытьФормуСвиноматки(Запись.НомерЖивотного, Запись.ДатаВвода);
		ТекущаяЗапись = ТекущаяЗапись + 1;
		Индикатор = ТекущаяЗапись / ВсегоЗаписей * 100;
		ОбновитьОтображениеДанных();

	КонецЦикла;
	УстановитьЗначениеКонстантыНаСервере();

КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеКонстантыНаСервере()
	Константы.ЗапускОбработкиПриОбновлении.Установить(Ложь);
КонецПроцедуры
&НаСервере
Процедура ОбновитьДанныеВводаНаСервере()
	НаборЗаписей = РегистрыСведений.КарточкаВнесенияДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() <> 0 Тогда
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти