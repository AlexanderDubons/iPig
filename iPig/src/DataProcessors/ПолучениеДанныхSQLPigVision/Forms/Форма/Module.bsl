
&НаСервере
Процедура ПолучитьДанныеНаСервере()  
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;                     
	
	//------------Загрузить справочники медицина и диагнозы----	    
	ТекстИнструкции	= 
	"SELECT Diagnose.Code, Diagnose_NameTranslated.Translated
	|	FROM     Diagnose LEFT JOIN
	|              Diagnose_NameTranslated ON Diagnose.Code = Diagnose_NameTranslated.ID1"; 	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				КодДиагноз =  Выборка.Fields("Code").Value;
				Если Справочники.Диагноз.НайтиПоКоду(КодДиагноз) = Справочники.Диагноз.ПустаяСсылка() Тогда 
					НоваяЗапись = Справочники.Диагноз.СоздатьЭлемент();
					НоваяЗапись.Код 			   = КодДиагноз;
					НоваяЗапись.Наименование 	   = Выборка.Fields("Translated").Value; 
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	ТекстИнструкции	= 
	"SELECT Medicament.Code,   Medicament_NameTranslated.Translated
	|	FROM     Medicament LEFT JOIN
	|              Medicament_NameTranslated ON Medicament.Code = Medicament_NameTranslated.ID1"; 	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				КодМедикамента =  Выборка.Fields("Code").Value;
				Если Справочники.Медикаменты.НайтиПоКоду(КодМедикамента) = Справочники.Медикаменты.ПустаяСсылка() Тогда 
					НоваяЗапись = Справочники.Медикаменты.СоздатьЭлемент();
					НоваяЗапись.Код 			   = КодМедикамента;
					НоваяЗапись.Наименование 	   = Выборка.Fields("Translated").Value; 
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;   
	
	ТекстИнструкции	= 
	"SELECT Journal.Code, Diagnose.Code AS DCode, Medicament.Code AS MCode, Journal.Treatment, Journal.DosagePerKgPig, Journal.KgPig, Journal.AverageWeightPerPig, Journal.DosagePerPig, Journal.ContainmentDays, 
	|           Journal.RepeatTreatmentDays
	|	FROM     Journal LEFT OUTER JOIN
	|           Medicament ON Journal.MedicamentId = Medicament.ID LEFT OUTER JOIN
	|           Diagnose ON Journal.DiagnosisId = Diagnose.ID"; 	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				КодМедикамента =  Выборка.Fields("Code").Value;
				Если Справочники.ЖурналЛечения.НайтиПоКоду(КодМедикамента) = Справочники.ЖурналЛечения.ПустаяСсылка() Тогда 
					НоваяЗапись = Справочники.ЖурналЛечения.СоздатьЭлемент();
					НоваяЗапись.Код 			   	= КодМедикамента;
					НоваяЗапись.Диагноз 	   	  	= Справочники.Диагноз.НайтиПоКоду(Выборка.Fields("DCode").Value);  
					НоваяЗапись.Медикаменты			= Справочники.Медикаменты.НайтиПоКоду(Выборка.Fields("MCode").Value);
					НоваяЗапись.Наименование		= НоваяЗапись.Диагноз.Наименование + " / " + НоваяЗапись.Медикаменты.Наименование;
					НоваяЗапись.Лечение				= Выборка.Fields("Treatment").Value;
					НоваяЗапись.Дозировка           = Выборка.Fields("DosagePerKgPig").Value;
					НоваяЗапись.ВесДозировки        = Выборка.Fields("KgPig").Value;
					НоваяЗапись.ВесСвиньи           = Выборка.Fields("AverageWeightPerPig").Value;
					НоваяЗапись.ДозаНаСвинью        = Выборка.Fields("DosagePerPig").Value;
					НоваяЗапись.ДнейДоВыведения		= Выборка.Fields("ContainmentDays").Value;
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;  
	
	
	//------------Загружаем справочник работников-------------
	
	ТекстИнструкции	= 
	"SELECT 
	|  [Code]
	| ,[Name]
	| ,[Initials]
	|	 FROM [AgroSoft_PV].[dbo].[Employee]
	|	 WHERE  [Name] <> 'NULL' "; 	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				КодРаботника =  Выборка.Fields("Code").Value;
				Если Справочники.Работник.НайтиПоКоду(КодРаботника) = Справочники.Работник.ПустаяСсылка() Тогда 
					НоваяЗапись = Справочники.Работник.СоздатьЭлемент();
					НоваяЗапись.Код 			   = КодРаботника;
					НоваяЗапись.КодРаботника 	   = КодРаботника;
					НоваяЗапись.Наименование 	   = Выборка.Fields("Name").Value + " " + Выборка.Fields("Initials").Value; 
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	
	//------------Загружаем справочник мест------------------
	ТекстИнструкции	= 
	"SELECT Location.Code, Location.ID, Location_NameTranslated.ID1, Location_NameTranslated.Translated
	|	FROM     Location LEFT JOIN
	|              Location_NameTranslated ON Location.ID = Location_NameTranslated.ID1"; 
	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				КодМеста =  Выборка.Fields("Code").Value;
				Если Справочники.Место.НайтиПоКоду(КодМеста) = Справочники.Место.ПустаяСсылка() Тогда 
					НоваяЗапись = Справочники.Место.СоздатьЭлемент();
					НоваяЗапись.Код 			= КодМеста;
					НоваяЗапись.КодМеста 		= КодМеста;
					НоваяЗапись.Наименование 	= Выборка.Fields("Translated").Value; 
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	
	
	//------------Загружаем справочник пород-----------------
	ТекстИнструкции	= 
	"SELECT Breed.Code, Breed.ID, Breed_NameTranslated.Translated
	|	FROM     Breed INNER JOIN
	|              Breed_NameTranslated ON Breed.ID = Breed_NameTranslated.ID1";
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				Код =  Выборка.Fields("ID").Value;
				Если Справочники.Порода.НайтиПоКоду(Код) = Справочники.Порода.ПустаяСсылка() Тогда 
					НоваяЗапись 				= Справочники.Порода.СоздатьЭлемент();
					НоваяЗапись.Код 			= Выборка.Fields("ID").Value;
					НоваяЗапись.КодПороды 		= Выборка.Fields("Code").Value;
					НоваяЗапись.Наименование 	= Выборка.Fields("Translated").Value;  
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	//----------------------Загружаем справочник родители-------------------------------
	ТекстИнструкции =
	"SELECT        
	|	[ID]
	|  ,[AnimalNumber]
	|  ,[BirthYear]
	|  ,[BirthDate]
	|  ,[BirthWeight]
	|  ,[Sex]
	|  ,[AnimalType]
	|  ,[BreedId]
	|  ,[EarTag]
	|  ,[EntryDate]
	|  ,[ExitDate]
	|  ,[ExitType]
	|  ,[FatherId]
	|  ,[MotherId]
	|  ,[DGTagID]
	|  FROM [AgroSoft_PV].[dbo].[Animal]
	|  WHERE [AnimalType] = '1' "; 
	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				Если Выборка.Fields("AnimalType").Value = 1 Тогда  //Родитель   
					КодРодителя = Выборка.Fields("AnimalNumber").Value;
					Если Справочники.КарточкаРодители.НайтиПоКоду(КодРодителя) = Справочники.КарточкаРодители.ПустаяСсылка() И ЗначениеЗаполнено(Выборка.Fields("AnimalNumber").Value) Тогда		
						НоваяЗапись 					= Справочники.КарточкаРодители.СоздатьЭлемент(); 
						НоваяЗапись.Код = КодРодителя;
						ПолучитьКодЖивотного(КодРодителя);
						НоваяЗапись.НомерЖивотного 		= Справочники.НомерЖивотного.НайтиПоКоду(КодРодителя);						 
						НоваяЗапись.Пол 				= ПолучитьПолЖивотного(Выборка);
						НоваяЗапись.КодПороды 			= Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value);
						Если ЗначениеЗаполнено(Выборка.Fields("DGTagId").Value) Тогда
							Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
								НоваяЗаписьСпр 				= Справочники.IDНомер.СоздатьЭлемент(); 
								НоваяЗаписьСпр.Наименование 	= Выборка.Fields("DGTagId").Value;
								НоваяЗаписьСпр.Записать();
							КонецЕсли;  
							НоваяЗапись.DGTagId = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value); 
						КонецЕсли;						
						НоваяЗапись.Записать();
					КонецЕсли;
				Иначе
					Сообщить(Выборка.Fields("AnimalNumber").Value);
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	//------------------------Загружаем ввод свиноматок-------------------------------------
	
	ТекстИнструкции =
	"SELECT Animal.ID, Animal.AnimalNumber, Animal.BirthYear,Animal.ExitWeight, Animal.BirthDate, Animal.BirthWeight, Animal.Sex, Animal.AnimalType, Animal.BreedId, Animal.EarTag, Animal.EntryDate, Animal.ExitDate, Animal.ExitType, Animal.FatherId, 
	|             Animal.MotherId, Animal.TagId, Animal.EarTag, Animal.DGTagId, Cause.Code
	|	FROM     Animal LEFT JOIN
	|             Cause ON (Animal.ExitCause2Id = Cause.id)";	
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				Если Выборка.Fields("AnimalType").Value = 0   Тогда   //Животное фермы
					НоваяЗапись = РегистрыСведений.КарточкаВнесенияДанных.СоздатьМенеджерЗаписи();
					//----------------------------------  
					Если Выборка.Fields("EntryDate").Value <> NULL Тогда 
						НоваяЗапись.Период = Выборка.Fields("EntryDate").Value;       
					ИначеЕсли Выборка.Fields("BirthDate").Value <> NULL Тогда
						НоваяЗапись.Период = Выборка.Fields("BirthDate").Value;
					Иначе
						НоваяЗапись.Период = Дата(2,2,2,0,0,0);
					КонецЕсли;
					//----------------------------------
					НоваяЗапись.КодПороды = Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value); 
					//----------------------------------
					НоваяЗапись.Пол = ПолучитьПолЖивотного(Выборка);               
					//----------------------------------
					КодЖивотного = Выборка.Fields("AnimalNumber").Value;
					ПолучитьКодЖивотного(КодЖивотного);
					НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
					//----------------------------------
					НоваяЗапись.ДатаРождения = Выборка.Fields("BirthDate").Value; 
					//----------------------------------    
					НоваяЗапись.ТипЖивотного = Перечисления.ТипЖивотного.ЖивотноеФермы;  
					//---------------------------------- 
					Если ЗначениеЗаполнено(Выборка.Fields("TagId").Value) Тогда
						Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("TagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
							НоваяЗаписьСпр 				= Справочники.IDНомер.СоздатьЭлемент(); 
							НоваяЗаписьСпр.Наименование 	= Выборка.Fields("TagId").Value;
							НоваяЗаписьСпр.Записать();
						КонецЕсли;  
						НоваяЗапись.IDНомер = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("TagId").Value); 
					КонецЕсли; 
					
					Если ЗначениеЗаполнено(Выборка.Fields("DGTagId").Value) Тогда
						Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
							НоваяЗаписьСпр 				= Справочники.IDНомер.СоздатьЭлемент(); 
							НоваяЗаписьСпр.Наименование 	= Выборка.Fields("DGTagId").Value;
							НоваяЗаписьСпр.Записать();
						КонецЕсли;  
						НоваяЗапись.DGTagId = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value); 
					КонецЕсли; 
					
					
					
					НоваяЗапись.УшнойВыщип =  Выборка.Fields("EarTag").Value; 
					
					Если Выборка.Fields("FatherId").Value <> -1 Тогда   
						ДанныеОтец = ПолучитьНомерЖивотногоПоИД(Выборка.Fields("FatherId").Value);
						Если Справочники.КарточкаРодители.НайтиПоКоду(ДанныеОтец.НомерЖивотногоРодителя) = Справочники.КарточкаРодители.ПустаяСсылка() 
							И ЗначениеЗаполнено(ДанныеОтец.НомерЖивотногоРодителя) Тогда 							
							КодРодителя						= ДанныеОтец.НомерЖивотногоРодителя;  
							НоваяЗаписьРод 					= Справочники.КарточкаРодители.СоздатьЭлемент(); 
							НоваяЗаписьРод.Код 				= КодРодителя;
							НоваяЗаписьРод.КодПороды        = ДанныеОтец.ПородаРодителя;  
							НоваяЗаписьРод.Пол				= ДанныеОтец.ПолРодителя;
							НоваяЗаписьРод.ДатаВвода        = ДанныеОтец.ДатаВводаРодителя;
							НоваяЗаписьРод.ДатаРождения		= ДанныеОтец.ДатаРожденияРодителя;
							ПолучитьКодЖивотного(КодРодителя);
							НоваяЗаписьРод.НомерЖивотного 		= Справочники.НомерЖивотного.НайтиПоКоду(КодРодителя);						 
							НоваяЗаписьРод.Записать();
						КонецЕсли;  
						НоваяЗапись.РодителиОтец = Справочники.КарточкаРодители.НайтиПоКоду(ДанныеОтец.НомерЖивотногоРодителя);
					КонецЕсли;        
					
					
					Если Выборка.Fields("MotherId").Value <> -1 Тогда   
						ДанныеМать = ПолучитьНомерЖивотногоПоИД(Выборка.Fields("MotherId").Value);
						Если Справочники.КарточкаРодители.НайтиПоКоду(ДанныеМать.НомерЖивотногоРодителя) = Справочники.КарточкаРодители.ПустаяСсылка()
							И ЗначениеЗаполнено(ДанныеМать.НомерЖивотногоРодителя) Тогда  							
							КодРодителя						= ДанныеМать.НомерЖивотногоРодителя;
							НоваяЗаписьРод 					= Справочники.КарточкаРодители.СоздатьЭлемент();  
							НоваяЗаписьРод.Код 				= КодРодителя;
							НоваяЗаписьРод.КодПороды        = ДанныеМать.ПородаРодителя;
							НоваяЗаписьРод.Пол				= ДанныеМать.ПолРодителя;
							НоваяЗаписьРод.ДатаВвода        = ДанныеМать.ДатаВводаРодителя;
							НоваяЗаписьРод.ДатаРождения		= ДанныеМать.ДатаРожденияРодителя;
							ПолучитьКодЖивотного(КодРодителя);
							НоваяЗаписьРод.НомерЖивотного 		= Справочники.НомерЖивотного.НайтиПоКоду(КодРодителя);						 
							НоваяЗаписьРод.Записать();
						КонецЕсли;  
						НоваяЗапись.РодителиМать = Справочники.КарточкаРодители.НайтиПоКоду(ДанныеМать.НомерЖивотногоРодителя); 
					КонецЕсли;
					
														  
					НоваяЗапись.ДатаВыбытие  = Выборка.Fields("ExitDate").Value; 
					НоваяЗапись.КодВыбытие	 = Справочники.Причины.НайтиПоКоду(Выборка.Fields("Code").Value);     
					НоваяЗапись.МассаВыбытие = Выборка.Fields("ExitWeight").Value;
					ТипВыбытияSQL = Выборка.Fields("ExitType").Value; 
					Если ТипВыбытияSQL = 1 Тогда
						НоваяЗапись.ТипВыбытие = Перечисления.ТипВыбытие.Продано;
					ИначеЕсли ТипВыбытияSQL = 4 Тогда 	
						НоваяЗапись.ТипВыбытие = Перечисления.ТипВыбытие.Падеж;
					ИначеЕсли ТипВыбытияSQL = 6 Тогда
						НоваяЗапись.ТипВыбытие = Перечисления.ТипВыбытие.Отсутствует;	 
					КонецЕсли;
					НоваяЗапись.Записать();        
				ИначеЕсли Выборка.Fields("AnimalType").Value = 1 Тогда  //Родитель   
					КодРодителя = Выборка.Fields("AnimalNumber").Value;
					Если Справочники.КарточкаРодители.НайтиПоКоду(КодРодителя) <> Справочники.КарточкаРодители.ПустаяСсылка() Тогда		
						НоваяЗапись 					= Справочники.КарточкаРодители.НайтиПоКоду(КодРодителя).ПолучитьОбъект(); 
						НоваяЗапись.Код 				= КодРодителя;
						ПолучитьКодЖивотного(КодРодителя);
						НоваяЗапись.НомерЖивотного 		= Справочники.НомерЖивотного.НайтиПоКоду(КодРодителя);						 
						НоваяЗапись.Пол 				= ПолучитьПолЖивотного(Выборка);
						НоваяЗапись.КодПороды 			= Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value);  
						ДанныеОтец = ПолучитьНомерЖивотногоПоИД(Выборка.Fields("FatherId").Value);
						Если ДанныеОтец <> Неопределено Тогда
							НоваяЗапись.НомерЖивотногоМать 	= Справочники.КарточкаРодители.НайтиПоКоду(ДанныеОтец.НомерЖивотногоРодителя); 
						КонецЕсли; 
						ДанныеМать = ПолучитьНомерЖивотногоПоИД(Выборка.Fields("MotherId").Value);
						Если ДанныеМать <> Неопределено Тогда
							НоваяЗапись.НомерЖивотногоОтец 	= Справочники.КарточкаРодители.НайтиПоКоду(ДанныеМать.НомерЖивотногоРодителя);
						КонецЕсли;
						Если ЗначениеЗаполнено(Выборка.Fields("DGTagId").Value) Тогда
							Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
								НоваяЗаписьСпр 				= Справочники.IDНомер.СоздатьЭлемент(); 
								НоваяЗаписьСпр.Наименование 	= Выборка.Fields("DGTagId").Value;
								НоваяЗаписьСпр.Записать();
							КонецЕсли;  
							НоваяЗапись.DGTagId = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value); 
						КонецЕсли;						
						НоваяЗапись.Записать();
					КонецЕсли;
				Иначе
					Сообщить(Выборка.Fields("AnimalNumber").Value);
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерЖивотногоПоИД(Знач ИД)
	
	Перем  ТекстИнструкции; 
	РодителиСтруктура = Неопределено;
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	[ID]
	|  ,[AnimalNumber]
	|  ,[BreedId]
	|  ,[Sex]
	|  ,[BirthDate]
	|  ,[EntryDate]
	|  FROM [AgroSoft_PV].[dbo].[Animal]
	|  WHERE [ID] = " + "'" +СтрЗаменить(Строка(ИД)," ","")+"'";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();   
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НомерЖивотногоРодителя 	= Выборка.Fields("AnimalNumber").Value;  
				ПородаРодителя			= Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value);
				ПолРодителя             = ПолучитьПолЖивотного(Выборка); 
				ДатаРожденияРодителя    = Выборка.Fields("BirthDate").Value;
				ДатаВводаРодителя       = Выборка.Fields("EntryDate").Value;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
		РодителиСтруктура 		= Новый Структура ("НомерЖивотногоРодителя, ПородаРодителя, ПолРодителя, ДатаРожденияРодителя, ДатаВводаРодителя"
												   ,НомерЖивотногоРодителя, ПородаРодителя, ПолРодителя, ДатаРожденияРодителя, ДатаВводаРодителя);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат РодителиСтруктура;
КонецФункции

&НаСервере
Процедура ПолучитьКодЖивотного(Знач КодРодителя)
	
	Перем НоваяЗаписьНомерЖивотного;
	
	Если ЗначениеЗаполнено(КодРодителя) И Справочники.НомерЖивотного.НайтиПоКоду(КодРодителя) = Справочники.НомерЖивотного.ПустаяСсылка()  Тогда
		НоваяЗаписьНомерЖивотного = Справочники.НомерЖивотного.СоздатьЭлемент();
		НоваяЗаписьНомерЖивотного.Код = КодРодителя;
		НоваяЗаписьНомерЖивотного.Наименование = КодРодителя; 
		НоваяЗаписьНомерЖивотного.Записать();    
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПолЖивотного(Знач Выборка)	
	Если Выборка.Fields("Sex").Value = 1 Тогда
		Возврат  Перечисления.Пол.Свинка;
	Иначе
		Возврат Перечисления.Пол.Хряк;  
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПолучитьДанные(Команда)
	ПолучитьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОсеменение(Команда)
	ПолучитьОсеменениеНаСервере();
КонецПроцедуры  


&НаСервере
Процедура ПолучитьОсеменениеНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	Animal.*, Service.*, Employee.Code AS EmpCode
	|  FROM Animal INNER JOIN 
	|			Service ON Animal.ID = Service.AnimalId LEFT JOIN
	|			Employee ON Service.EmployeeId = Employee.Id";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл    
				
				КодЖивотного 	= Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);     
				СпрКодЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного); 
				ДатаВвода		= Выборка.Fields("EntryDate").Value;
				ДатаСобытия		= Выборка.Fields("EventDate").Value;  
				
				КодХряка 	= ПолучитьНомерЖивотногоПоИД(Выборка.Fields("BoarId").Value);
				ПолучитьКодЖивотного(КодХряка.НомерЖивотногоРодителя);
				СпрКодХряка = Справочники.НомерЖивотного.НайтиПоКоду(КодХряка.НомерЖивотногоРодителя);
				
				НаборЗаписейОсеменение = РегистрыСведений.ЖурналОсеменения.СоздатьНаборЗаписей();
				НаборЗаписейОсеменение.Отбор.НомерЖивотного.Установить(СпрКодЖивотного);
				НаборЗаписейОсеменение.Отбор.ДатаВвода.Установить(ДатаВвода);
				НаборЗаписейОсеменение.Отбор.Период.Установить(ДатаСобытия);
				НаборЗаписейОсеменение.Прочитать();
				
				Если НаборЗаписейОсеменение.Количество() = 1 Тогда    
					Для Каждого Стр ИЗ НаборЗаписейОсеменение Цикл  
						Если Стр.НомерЖивотногоХряк = Справочники.НомерЖивотного.ПустаяСсылка() Тогда 
							Стр.НомерЖивотногоХряк 	=  СпрКодХряка;   
							Стр.КодПородыХряк      = _НастройкиКонфигурацииНаСервере.ПолучитьПородуХрякаНаСервере( Стр.НомерЖивотногоХряк);
						ИначеЕсли Стр.НомерЖивотногоХряк1 = Справочники.НомерЖивотного.ПустаяСсылка() Тогда
							Стр.НомерЖивотногоХряк1	=  СпрКодХряка;   
							Стр.КодПородыХряк1      = _НастройкиКонфигурацииНаСервере.ПолучитьПородуХрякаНаСервере( Стр.НомерЖивотногоХряк1);
						ИначеЕсли Стр.НомерЖивотногоХряк2 = Справочники.НомерЖивотного.ПустаяСсылка() Тогда
							Стр.НомерЖивотногоХряк2 	=  СпрКодХряка; 
							Стр.КодПородыХряк2      = _НастройкиКонфигурацииНаСервере.ПолучитьПородуХрякаНаСервере( Стр.НомерЖивотногоХряк2);
						КонецЕсли;
					КонецЦикла;
					НаборЗаписейОсеменение.Записать(Истина);					
				Иначе				
					НоваяЗапись = РегистрыСведений.ЖурналОсеменения.СоздатьМенеджерЗаписи();
					//----------------------------------
					НоваяЗапись.НомерЖивотного = СпрКодЖивотного;
					//----------------------------------  
					НоваяЗапись.Период 		= ДатаСобытия; 
					НоваяЗапись.ДатаВвода 	= ДатаВвода;
					//----------------------------------   
					НоваяЗапись.НомерЖивотногоХряк =  СпрКодХряка;
					НоваяЗапись.КодПородыХряк      = _НастройкиКонфигурацииНаСервере.ПолучитьПородуХрякаНаСервере( НоваяЗапись.НомерЖивотногоХряк);
					//---------------------------------			
					НоваяЗапись.Работник = Справочники.Работник.НайтиПоКоду(Выборка.Fields("EmpCode").Value);
					НоваяЗапись.Записать(); 					
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьОпоросы(Команда)
	ПолучитьОпоросыНаСервере()
КонецПроцедуры  


&НаСервере
Процедура ПолучитьОпоросыНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	Animal.*, Farrowing.* , Location.Code, Condition.BackFat, Condition.Teats
	|  FROM Animal INNER JOIN 
	|			Farrowing ON Animal.ID = Farrowing.AnimalId LEFT JOIN  
	|			Transfer ON Farrowing.TransferId = Transfer.ID LEFT JOIN
	|             Location ON Transfer.ToLocationId = Location.ID LEFT JOIN
	|             Condition ON Farrowing.ConditionId = Condition.ID";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ЖурналОпороса.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период = Выборка.Fields("EventDate").Value; 
				НоваяЗапись.ДатаВвода = Выборка.Fields("EntryDate").Value;
				//----------------------------------   
				НоваяЗапись.Живорожденные  		= Выборка.Fields("LiveBorn").Value;
				НоваяЗапись.Слаборожденные 		= Выборка.Fields("WeakBorn").Value; 
				НоваяЗапись.Муммии		   		= Выборка.Fields("Mummified").Value; 
				НоваяЗапись.Мертвые		   		= Выборка.Fields("StillBorn").Value;
				НоваяЗапись.ПереведеноПоросят 	= Выборка.Fields("TransferredPiglets").Value;
				НоваяЗапись.Свинки				= Выборка.Fields("SowPiglets").Value;
				Если ЗначениеЗаполнено(Выборка.Fields("LitterId").Value) Тогда
					Если Справочники.IDГнезда.НайтиПоНаименованию(Выборка.Fields("LitterId").Value) = Справочники.IDГнезда.ПустаяСсылка() Тогда
						НоваяЗаписьСпр = Справочники.IDГнезда.СоздатьЭлемент();
						НоваяЗаписьСпр.Наименование = Выборка.Fields("LitterId").Value;
						НоваяЗаписьСпр.Записать();
					КонецЕсли;
					НоваяЗапись.IDГнезда  = Справочники.IDГнезда.НайтиПоНаименованию(Выборка.Fields("LitterId").Value)
				КонецЕсли;   
				НоваяЗапись.СреднийВес		 = Выборка.Fields("AverageWeight").Value;
				НоваяЗапись.МассаВсего       = Выборка.Fields("Weight").Value; 
				НоваяЗапись.Место 			= Справочники.Место.НайтиПоКоду(Выборка.Fields("Code").Value);
				НоваяЗапись.ТолщинаШпика 	 = Выборка.Fields("BackFat").Value;  
				НоваяЗапись.КоличествоСосков = Выборка.Fields("Teats").Value;
				//---------------------------------			
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьУЗИ(Команда)
	ПолучитьУЗИНаСервере();
КонецПроцедуры  


&НаСервере
Процедура ПолучитьУЗИНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT Animal.AnimalNumber, Animal.EntryDate, PregnancyTest.EventDate,
	|             PregnancyTest.TestResult, Location.Code, Condition.BackFat, Employee.Code AS EmpCode
	|	FROM     Animal INNER JOIN
	|             PregnancyTest ON Animal.ID = PregnancyTest.AnimalId LEFT JOIN
	|             Transfer ON PregnancyTest.TransferId = Transfer.ID LEFT JOIN
	|             Location ON Transfer.ToLocationId = Location.ID LEFT JOIN
	|             Condition ON PregnancyTest.ConditionId = Condition.ID LEFT JOIN
	|			   Employee ON PregnancyTest.EmployeeId = Employee.ID";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.Супоросность.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период = Выборка.Fields("EventDate").Value;
				НоваяЗапись.ДатаВвода = Выборка.Fields("EntryDate").Value;
				//----------------------------------  
				РезультатУЗИ = Выборка.Fields("TestResult").Value;
				Если РезультатУЗИ = 0 Тогда 
					НоваяЗапись.РезультатУЗИ  = Перечисления.РезультатУЗИ.Негативный;
				ИначеЕсли РезультатУЗИ = 1 Тогда                                     
					НоваяЗапись.РезультатУЗИ  = Перечисления.РезультатУЗИ.Неизвестный;					
				ИначеЕсли РезультатУЗИ = 2   Тогда                                         
					НоваяЗапись.РезультатУЗИ  = Перечисления.РезультатУЗИ.Позитивный;
				КонецЕсли;
				НоваяЗапись.Место 			= Справочники.Место.НайтиПоКоду(Выборка.Fields("Code").Value);
				НоваяЗапись.ТолщинаШпика 	= Выборка.Fields("BackFat").Value;   
				НоваяЗапись.Работник		= Справочники.Работник.НайтиПоКоду( Выборка.Fields("EmpCode").Value);
				//---------------------------------			
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАборт(Команда)
	ПолучитьАбортНаСервере()
КонецПроцедуры  

&НаСервере
Процедура ПолучитьАбортНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	Animal.*, Abortion.*
	|  FROM Animal INNER JOIN Abortion ON Animal.ID = Abortion.AnimalId";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.Аборт.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период = Выборка.Fields("EventDate").Value;
				НоваяЗапись.ДатаВвода = Выборка.Fields("EntryDate").Value;
				//----------------------------------  		
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОтъем(Команда)
	ПолучитьОтъемНаСервере();
КонецПроцедуры  

&НаСервере
Процедура ПолучитьОтъемНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	Animal.*, Weaning.* , Condition.BackFat
	|  FROM Animal INNER JOIN 
	|				Weaning ON Animal.ID = Weaning.AnimalId LEFT JOIN
	|             Condition ON Weaning.ConditionId = Condition.ID";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ЖурналОтъема.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период = Выборка.Fields("EventDate").Value;  
				НоваяЗапись.ДатаВвода = Выборка.Fields("EntryDate").Value;
				НоваяЗапись.КоличествоОтъемышей = Выборка.Fields("NumOfWeaned").Value; 
				НоваяЗапись.МассаВсего			= Выборка.Fields("TotalWeight").Value;   
				НоваяЗапись.СреднийВес			= Выборка.Fields("AverageWeight").Value;  
				НоваяЗапись.Мачеха				= Выборка.Fields("NursingSow").Value; 
				НоваяЗапись.ТолщинаШпика 	 	= Выборка.Fields("BackFat").Value; 
				//----------------------------------  		
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ОткрытьЗаписиНаСервере()
	
	Рег = РегистрыСведений.КарточкаСвиноматки; 
	Выборка = Рег.Выбрать();
	мсДанные = Новый Массив;  
	
	Пока Выборка.Следующий() Цикл
		СтруктураДанных = Новый Структура("НомерЖивотного, Период");
		ЗаполнитьЗначенияСвойств(СтруктураДанных,Выборка);
		мсДанные.Добавить(СтруктураДанных);
	КонецЦикла;
	Возврат мсДанные;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьЗаписи(Команда)
	
	мсДанные = ОткрытьЗаписиНаСервере();  
	Для каждого Строка из мсДанные Цикл
		НомерЖивотного = Строка.НомерЖивотного;
		Период = Строка.Период;
		Попытка
			ОткрытьФорму("РегистрСведений.КарточкаСвиноматки.Форма.ФормаЗаписи", Новый Структура("Ключ, ФормаОткрыта", _НастройкиКонфигурацииНаСервере.ПолучитьКлючЗаписи(НомерЖивотного, Период),Истина),,,,,,);
		Исключение 
			Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
		КонецПопытки;
		
	КонецЦикла; 
	
	
	
	
КонецПроцедуры



&НаСервере
Процедура ПолучитьПричиныВыбытияНаСервере()
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT  Cause.Code, Cause_NameTranslated.Translated, Cause_NameTranslated.ID2
	|	FROM     Cause_NameTranslated LEFT JOIN
	|             Cause ON Cause_NameTranslated.ID1 = Cause.ID
	| 	WHERE  (Cause_NameTranslated.ID2 = '11')";   //РОС_Бекон 11
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл     
				Если Справочники.Причины.НайтиПоКоду(Выборка.Fields("Code").Value) = Справочники.Причины.ПустаяСсылка() Тогда    
					Попытка
						НоваяЗапись = Справочники.Причины.СоздатьЭлемент();
						НоваяЗапись.Код 		 = Выборка.Fields("Code").Value;
						НоваяЗапись.КодПричины	 = Выборка.Fields("Code").Value;
						НоваяЗапись.Наименование = Выборка.Fields("Translated").Value;   
						НоваяЗапись.Записать();   
					Исключение
					КонецПопытки;
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПричиныВыбытия(Команда)
	ПолучитьПричиныВыбытияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьМертвыхПоросятНаСервере()
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT        
	|	Animal.*, DeadPiglet.*
	|  FROM Animal INNER JOIN DeadPiglet ON Animal.ID = DeadPiglet.AnimalId";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ПадежПоросят.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период = Выборка.Fields("EventDate").Value; 
				НоваяЗапись.ДатаВвода = Выборка.Fields("EntryDate").Value;
				//----------------------------------
				НоваяЗапись.КоличествоМертвых  = Выборка.Fields("NumOfDead").Value; 
				//----------------------------------  
				НоваяЗапись.КодПричины   = Справочники.Причины.НайтиПоКоду(Выборка.Fields("CauseId").Value);
				НоваяЗапись.Записать(Истина);
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьМертвыхПоросят(Команда)
	ПолучитьМертвыхПоросятНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбмен(Команда)   
	ОтключитьКонтрольОшибокНаСервере();
	ПолучитьПричиныВыбытияНаСервере(); 
	ПолучитьДанныеНаСервере();  
	ПолучитьОсеменениеНаСервере(); 
	ПолучитьОпоросыНаСервере() ;
	ПолучитьУЗИНаСервере();   
	ПолучитьАбортНаСервере(); 
	ПолучитьОтъемНаСервере();  
	ПолучитьМертвыхПоросятНаСервере();
	ПолучитьДопРегистрациюНаСервере();
	ПолучитьМедицинаНаСервере(); 
	
	ВключитьКонтрольОшибокНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВключитьКонтрольОшибокНаСервере()
	
	Константы.ОтключитьКонтрольОшибок.Установить(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОтключитьКонтрольОшибокНаСервере()
	
	Константы.ОтключитьКонтрольОшибок.Установить(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьМедицинаНаСервере()
	
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT Animal.AnimalNumber, Medicine.EventDate, Medicine.Amount, Medicament.Code AS CodeMed, Diagnose.Code AS CodeDiag, Journal.Code, Animal.EntryDate
	|FROM     Medicament RIGHT OUTER JOIN
	|             Journal ON Medicament.ID = Journal.MedicamentId LEFT OUTER JOIN
	|              Diagnose ON Journal.DiagnosisId = Diagnose.ID RIGHT OUTER JOIN
	|              Animal INNER JOIN
	|              Medicine ON Animal.ID = Medicine.AnimalId ON Medicine.JournalId = Journal.ID";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.Медицина.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период 			= Выборка.Fields("EventDate").Value;  
				НоваяЗапись.ДатаВвода 		= Выборка.Fields("EntryDate").Value;  
				НоваяЗапись.ЖурналЛечения 	= Справочники.ЖурналЛечения.НайтиПоКоду(Выборка.Fields("Code").Value);
				НоваяЗапись.Медикаменты 	= НоваяЗапись.ЖурналЛечения .Медикаменты;
				НоваяЗапись.Диагноз 		= НоваяЗапись.ЖурналЛечения.Диагноз;
				//----------------------------------  		
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьМедицина(Команда)
	ПолучитьМедицинаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДопРегистрациюНаСервере()
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT Animal.AnimalNumber,Animal.EntryDate, SupplementalRegistration.EventDate,  Cause.Code
	|	FROM     Animal INNER JOIN
	|              SupplementalRegistration ON Animal.ID = SupplementalRegistration.AnimalId LEFT OUTER JOIN
	|              Cause ON SupplementalRegistration.CauseId = Cause.ID";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ДополнителнаяРегистрация.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------  
				НоваяЗапись.Период 			= Выборка.Fields("EventDate").Value;  
				НоваяЗапись.ДатаВвода 		= Выборка.Fields("EntryDate").Value;  
				НоваяЗапись.Название 		= Справочники.Причины.НайтиПоКоду(Выборка.Fields("Code").Value);
				//----------------------------------  		
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДопРегистрацию(Команда)
	ПолучитьДопРегистрациюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьПлемСтадоНаСервере()
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ТекстИнструкции =
	"SELECT DanishGenetics.ID, DanishGenetics.UseCode, DanishGenetics.IndexDate, DanishGenetics.IndexValue, Animal_1.AnimalNumber, Animal_1.BirthDate, Animal_1.DGTagId, Animal_1.DanishGeneticsId, Animal_1.BigDutchmanFeedValveId, 
	|             Animal_1.EntryDate, Animal_1.BreedId, Animal_1.Farm, Animal_1.HerdId, Animal_1.AnimalType, Animal_1.MotherId, Animal.AnimalNumber AS MatherNumber, Animal.EntryDate AS MatherEntryDate, Animal.BreedId AS MatherBreedId
	|FROM     DanishGenetics RIGHT OUTER JOIN
	|                 Animal AS Animal_1 ON DanishGenetics.ID = Animal_1.DanishGeneticsId LEFT OUTER JOIN
	|                 Animal ON Animal_1.MotherId = Animal.ID
	|WHERE  (Animal_1.DGTagId <> '')";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ПлемСтадо.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------   
				НоваяЗапись.ДатаРождения				= Выборка.Fields("BirthDate").Value; 
				НоваяЗапись.ДатаВвода 					= Выборка.Fields("EntryDate").Value;  
				НоваяЗапись.КодПороды 					= Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value);
				Если ЗначениеЗаполнено(Выборка.Fields("DGTagId").Value) Тогда
					Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
						НоваяЗаписьСпр 					= Справочники.IDНомер.СоздатьЭлемент(); 
						НоваяЗаписьСпр.Наименование 	= Выборка.Fields("DGTagId").Value;
						НоваяЗаписьСпр.Записать();
					КонецЕсли;  
					НоваяЗапись.DGTagId = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value); 
				КонецЕсли;
				НоваяЗапись.ДатаИндекса					= Выборка.Fields("IndexDate").Value;
				НоваяЗапись.Индекс                      = Выборка.Fields("IndexValue").Value;
				//----------------------------------
				КодЖивотного = Выборка.Fields("MatherNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				//---------------------------------- 
				НоваяЗапись.РодителиМать                = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				НоваяЗапись.РодителиДатаВвода			= Выборка.Fields("MatherEntryDate").Value;   
				НоваяЗапись.РодителиМатьПорода          = Справочники.Порода.НайтиПоКоду(Выборка.Fields("MatherBreedId").Value); 
				//----------------------------------
				ЗаписьРегистра = РегистрыСведений.ЖурналОпороса.СоздатьНаборЗаписей();
				ЗаписьРегистра.Отбор.Период.Установить(НоваяЗапись.ДатаРождения);
				ЗаписьРегистра.Отбор.НомерЖивотного.Установить(НоваяЗапись.РодителиМать);
				ЗаписьРегистра.Отбор.ДатаВвода.Установить(НоваяЗапись.РодителиДатаВвода);
				ЗаписьРегистра.Прочитать();
				Для Каждого Стр ИЗ ЗаписьРегистра Цикл
					ЗаписьОсеменение = РегистрыСведений.ЖурналОсеменения.СоздатьНаборЗаписей();
			//		ЗаписьОсеменение.Отбор.Период.Установить(НоваяЗапись.ДатаРождения);
					ЗаписьОсеменение.Отбор.НомерЖивотного.Установить(НоваяЗапись.НомерЖивотного);
					ЗаписьОсеменение.Отбор.ДатаВвода.Установить(НоваяЗапись.ДатаВвода);  
					ЗаписьОсеменение.Отбор.НомерОпороса.Установить(Стр.НомерОпороса);
					ЗаписьОсеменение.Прочитать();
					Для Каждого СтрОсеменение ИЗ ЗаписьОсеменение Цикл
						НоваяЗапись.РодителиОтец 		= СтрОсеменение.НомерЖивотногоХряк;
						НоваяЗапись.РодителиОтецПорода 	= СтрОсеменение.КодПородыХряк;
					КонецЦикла;
				КонецЦикла;
				//----------------------------------
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПлемСтадо(Команда)
	ПолучитьПлемСтадоНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьПородуНаСервере()
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;    
	
	//------------Загружаем справочник пород-----------------
	ТекстИнструкции	= 
	"SELECT Breed.Code, Breed.ID, Breed_NameTranslated.Translated
	|	FROM     Breed INNER JOIN
	|              Breed_NameTranslated ON Breed.ID = Breed_NameTranslated.ID1";
	Попытка
		Команда.CommandText = ТекстИнструкции;
		Выборка = Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл  
				Код =  Выборка.Fields("ID").Value;
				Если Справочники.Порода.НайтиПоКоду(Код) = Справочники.Порода.ПустаяСсылка() Тогда 
					НоваяЗапись 				= Справочники.Порода.СоздатьЭлемент();
					НоваяЗапись.Код 			= Выборка.Fields("ID").Value;
					НоваяЗапись.КодПороды 		= Выборка.Fields("Code").Value;
					НоваяЗапись.Наименование 	= Выборка.Fields("Translated").Value;  
					НоваяЗапись.Записать();
				КонецЕсли;
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПороду(Команда)
	ПолучитьПородуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьРемСвинокНаСервере()
	Перем  ТекстИнструкции; 
	Попытка
		Соединение  = Новый COMОбъект("ADODB.Connection");
		Команда     = Новый COMОбъект("ADODB.Command");
		Выборка     = Новый COMОбъект("ADODB.RecordSet");   
		Соединение.ConnectionString =
		"driver={SQL Server};" +
		"server="+"192.168.5.135,1433"+";"+
		"uid="+"def"+";"+
		"pwd="+"def"+";"+
		"database="+"AgroSoft_PV"+";";
		Соединение.ConnectionTimeout = 30;
		Соединение.CommandTimeout = 600;
		//Открытие соединение
		Соединение.Open();
		Команда.ActiveConnection   = Соединение; 
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;          
	
	
	ТекстИнструкции =
	"SELECT Animal_1.AnimalNumber, Animal_1.BirthDate, Animal_1.DGTagId, Animal_1.DanishGeneticsId, Animal_1.BigDutchmanFeedValveId, Animal_1.EntryDate, Animal_1.BreedId, Animal_1.Farm, Animal_1.HerdId, Animal_1.AnimalType, 
    |             Animal_1.MotherId, Animal_1.FatherId, Animal.AnimalNumber AS MatherNumber, Animal.EntryDate AS MatherEntryDate, Animal.BreedId AS MatherBreedId, Animal_1.TagId
	|	FROM     Animal AS Animal_1 LEFT OUTER JOIN
    |              Animal ON Animal_1.MotherId = Animal.ID
	|WHERE  (Animal_1.AnimalType = 3)";
	Попытка
		Команда.CommandText 	= ТекстИнструкции;
		Выборка					= Команда.Execute();
		Если Выборка.BOF = Ложь Тогда
			Выборка.MoveFirst();
			Пока Выборка.EOF = Ложь Цикл 
				НоваяЗапись = РегистрыСведений.ПлемСтадо.СоздатьМенеджерЗаписи();
				//----------------------------------
				КодЖивотного = Выборка.Fields("AnimalNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);
				НоваяЗапись.НомерЖивотного = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				//----------------------------------   
				НоваяЗапись.ДатаРождения				= Выборка.Fields("BirthDate").Value; 
				НоваяЗапись.ДатаВвода 					= Выборка.Fields("EntryDate").Value;  
				НоваяЗапись.КодПороды 					= Справочники.Порода.НайтиПоКоду(Выборка.Fields("BreedId").Value);
				Если ЗначениеЗаполнено(Выборка.Fields("DGTagId").Value) Тогда
					Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
						НоваяЗаписьСпр 					= Справочники.IDНомер.СоздатьЭлемент(); 
						НоваяЗаписьСпр.Наименование 	= Выборка.Fields("DGTagId").Value;
						НоваяЗаписьСпр.Записать();
					КонецЕсли;  
					НоваяЗапись.DGTagId = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("DGTagId").Value); 
				КонецЕсли;   
				
				Если ЗначениеЗаполнено(Выборка.Fields("TagId").Value) Тогда
					Если Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("TagId").Value) = Справочники.IDНомер.ПустаяСсылка() Тогда  
						НоваяЗаписьСпр 					= Справочники.IDНомер.СоздатьЭлемент(); 
						НоваяЗаписьСпр.Наименование 	= Выборка.Fields("TagId").Value;
						НоваяЗаписьСпр.Записать();
					КонецЕсли;  
					НоваяЗапись.IDНомер = Справочники.IDНомер.НайтиПоНаименованию(Выборка.Fields("TagId").Value); 
				КонецЕсли; 
				
				//НоваяЗапись.ДатаИндекса					= Выборка.Fields("IndexDate").Value;
				//НоваяЗапись.Индекс                      = Выборка.Fields("IndexValue").Value; 
				//----------------------------------
				ДанныеОтец = ПолучитьНомерЖивотногоПоИД(Выборка.Fields("FatherId").Value);  
				ПолучитьКодЖивотного(ДанныеОтец.НомерЖивотногоРодителя);
				НоваяЗапись.РодителиОтец 		= Справочники.НомерЖивотного.НайтиПоКоду(ДанныеОтец.НомерЖивотногоРодителя);
				НоваяЗапись.РодителиОтецПорода 	= ДанныеОтец.ПородаРодителя;
				//----------------------------------
				КодЖивотного = Выборка.Fields("MatherNumber").Value;
				ПолучитьКодЖивотного(КодЖивотного);    
				
				//---------------------------------- 
				НоваяЗапись.РодителиМать                = Справочники.НомерЖивотного.НайтиПоКоду(КодЖивотного);
				НоваяЗапись.РодителиДатаВвода			= Выборка.Fields("MatherEntryDate").Value;   
				НоваяЗапись.РодителиМатьПорода          = Справочники.Порода.НайтиПоКоду(Выборка.Fields("MatherBreedId").Value); 
				//----------------------------------
						//----------------------------------
				НоваяЗапись.Записать();
				Выборка.MoveNext();
			КонецЦикла;
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	Попытка
		Соединение.Close();
		Сообщить("Соединение закрыто!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРемСвинок(Команда)
	ПолучитьРемСвинокНаСервере();
КонецПроцедуры






