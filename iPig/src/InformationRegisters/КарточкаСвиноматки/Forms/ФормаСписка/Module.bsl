&НаСервере
Процедура СписокПослеУдаленияНаСервере()
	
	//ЖурналВыбраковки
	НомерЖивотного 	= ЭтаФорма.ПодчиненныеЭлементы.Список.ТекущаяСтрока.НомерЖивотного;
	ДатаВвода		= НачалоДня(ЭтаФорма.ПодчиненныеЭлементы.Список.ТекущаяСтрока.Период);

	НаборЗаписей = РегистрыСведений.КарточкаСвиноматки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
	НаборЗаписей.Отбор.Период.Установить(ДатаВвода);
	НаборЗаписей.Прочитать();

	Если НаборЗаписей.Количество() = 0 Тогда

		НаборЗаписей = РегистрыСведений.ЖурналВыбраковки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		//ЖурналОпороса   
		НаборЗаписей = РегистрыСведений.ЖурналОпороса.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		//ЖурналОсеменения 
		НаборЗаписей = РегистрыСведений.ЖурналОсеменения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		//ЖурналОтъема

		НаборЗаписей = РегистрыСведений.ЖурналОтъема.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		
		//КарточкаВнесенияДанных
		НаборЗаписей = РегистрыСведений.КарточкаВнесенияДанных.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.Период.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		//Вакцинация 
		НаборЗаписей = РегистрыСведений.Вакцинация.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		
		//Аборт

		НаборЗаписей = РегистрыСведений.Аборт.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		//Супоросность
		НаборЗаписей = РегистрыСведений.Супоросность.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		
		//ПоследнееСобытие

		НаборЗаписей = РегистрыСведений.ПоследнееСобытие.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли; 
		
		
		//ПоследнееСобытие
		НаборЗаписей = РегистрыСведений.КлючевыеЦифрыОпороса.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать(Истина);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	СписокПослеУдаленияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЖивыеПриИзменении(Элемент)
// Вставить содержимое обработчика.
	Если Живые Тогда
		Все = Ложь;
	Иначе
		Все = Истина;
	КонецЕсли;
	ОтборСписокСвиноматок();
КонецПроцедуры

&НаКлиенте
Процедура ОтборСписокСвиноматок()

	Перем ЭлементыОтбора;

	Список.Отбор.Элементы.Очистить();
	ЭлементыГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементыГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементыГруппаОтбора.Использование = Истина;

	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= Не Все;
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ДатаВыбытие");
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементыОтбора.ПравоеЗначение   = '00010101';

	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= Не (ПериодОтбора.ДатаНачала = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ОтборПо);
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаНачала;

	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= Не (ПериодОтбора.ДатаОкончания = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных(ОтборПо);
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаОкончания;

	КоличествоЗаписей = "Количество свиноматок: " + СписокВТЗнаСервере();
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере()
// реквизит1 - динамический список на форме
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип(
		"ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	МассивСсылок = ТаблицаРезультат.ВыгрузитьКолонку(0);  // выгружаем ссылки в массив для передачи клиенту
	Возврат массивСсылок.Количество();
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Живые 	= Истина;
	Все 	= Ложь; 
//Элементы.ОтборПо = "Дата ввода";
	ОтборПо = "Период";
	ОтборСписокСвиноматок();

КонецПроцедуры

&НаКлиенте
Процедура ВсеПриИзменении(Элемент)
	Если Все Тогда
		Живые = Ложь;
	Иначе
		Живые = Истина;
	КонецЕсли;
	ОтборСписокСвиноматок();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
// Вставить содержимое обработчика. 
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	КоличествоЗаписей = "Кол. свиноматок: " + СписокВТЗнаСервере();
КонецПроцедуры