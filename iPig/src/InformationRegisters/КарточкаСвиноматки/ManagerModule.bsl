Функция ПолучитьДанныеРодителей(НомерЖивотного, ДатаВвода) Экспорт
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КарточкаСвиноматки.НомерЖивотногоОтец КАК НомерЖивотногоОтец,
	|	КарточкаСвиноматки.НомерЖивотногоМать КАК НомерЖивотногоМать,
	|	КарточкаСвиноматки.ДатаРождения КАК ДатаРождения,
	|	КарточкаСвиноматки.КодПороды КАК КодПороды
	|ИЗ
	|	РегистрСведений.КарточкаСвиноматки КАК КарточкаСвиноматки
	|ГДЕ
	|	КарточкаСвиноматки.НомерЖивотного = &НомерЖивотного
	|	И КарточкаСвиноматки.Период = &ДатаВвода";

	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ДанныеРодителей = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДанныеРодителей.Вставить("Отец", ВыборкаДетальныеЗаписи.НомерЖивотногоОтец);
		ДанныеРодителей.Вставить("Мать", ВыборкаДетальныеЗаписи.НомерЖивотногоМать);
		ДанныеРодителей.Вставить("ДатаРождения", ВыборкаДетальныеЗаписи.ДатаРождения);
		ДанныеРодителей.Вставить("КодПороды", ВыборкаДетальныеЗаписи.КодПороды);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат ДанныеРодителей;
КонецФункции

Процедура ПолучитьДанныеОпоросНаСервере(НомерЖивотного, ДатаВвода, ТЧОпоросы) Экспорт

	Перем Запрос, РезультатЗапроса;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЖурналОпороса.Период КАК ДатаОпороса,
				   |	&Статус КАК Статус,
				   |	ЖурналОпороса.НомерОпороса КАК НомерОпороса,
				   |	ЖурналОпороса.Живорожденные КАК Живорожденные,
				   |	ЖурналОпороса.Мертвые КАК Мертвые,
				   |	ЖурналОпороса.Слаборожденные КАК Слаборожденные,
				   |	ЖурналОпороса.Муммии КАК Муммии,
				   |	ЖурналОпороса.Свинки КАК Свинки,
				   |	ЖурналОпороса.МассаВсего КАК МассаВсего,
				   |	ЖурналОпороса.СреднийВес КАК СреднийВес,
				   |	ЖурналОпороса.ПереведеноПоросят КАК ПереведеноПоросят,
				   |	ЖурналОпороса.IDГнезда КАК IDГнезда,
				   |	ЖурналОпороса.ТолщинаШпика КАК ТолщинаШпика,
				   |	ЖурналОпороса.КоличествоСосков КАК КоличествоСосков,
				   |	ЖурналОпороса.Место КАК Место
				   |ПОМЕСТИТЬ ВТДанные
				   |ИЗ
				   |	РегистрСведений.ЖурналОпороса КАК ЖурналОпороса
				   |ГДЕ
				   |	ЖурналОпороса.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналОпороса.ДатаВвода = &ДатаВвода
				   |
				   |ИНДЕКСИРОВАТЬ ПО
				   |	ДатаОпороса
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТДанные.ДатаОпороса КАК ДатаОпороса,
				   |	ВТДанные.Статус КАК Статус,
				   |	ВТДанные.НомерОпороса КАК НомерОпороса,
				   |	АВТОНОМЕРЗАПИСИ() КАК Номер,
				   |	ВТДанные.ПереведеноПоросят КАК ПереведеноПоросят,
				   |	ВТДанные.СреднийВес КАК СреднийВес,
				   |	ВТДанные.МассаВсего КАК МассаВсего,
				   |	ВТДанные.Свинки КАК Свинки,
				   |	ВТДанные.Муммии КАК Муммии,
				   |	ВТДанные.Слаборожденные КАК Слаборожденные,
				   |	ВТДанные.Мертвые КАК Мертвые,
				   |	ВТДанные.Живорожденные КАК Живорожденные,
				   |	ВТДанные.IDГнезда КАК IDГнезда,
				   |	ВТДанные.ТолщинаШпика КАК ТолщинаШпика,
				   |	ВТДанные.КоличествоСосков КАК КоличествоСосков,
				   |	ВТДанные.Место КАК Место
				   |ПОМЕСТИТЬ ВТСорт
				   |ИЗ
				   |	ВТДанные КАК ВТДанные
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТСорт.ДатаОпороса КАК ДатаОпороса,
				   |	ВТСорт.Статус КАК Статус,
				   |	ВЫБОР
				   |		КОГДА ВТСорт.НомерОпороса = 0
				   |				ИЛИ ВТСорт.НомерОпороса <> ВТСорт.Номер
				   |			ТОГДА ВТСорт.Номер
				   |		ИНАЧЕ ВТСорт.НомерОпороса
				   |	КОНЕЦ КАК НомерОпороса,
				   |	ВТСорт.Живорожденные КАК Живорожденные,
				   |	ВТСорт.Мертвые КАК Мертвые,
				   |	ВТСорт.Слаборожденные КАК Слаборожденные,
				   |	ВТСорт.Муммии КАК Муммии,
				   |	ВТСорт.Свинки КАК Свинки,
				   |	ВТСорт.МассаВсего КАК МассаВсего,
				   |	ВТСорт.СреднийВес КАК СреднийВес,
				   |	ВТСорт.ПереведеноПоросят КАК ПереведеноПоросят,
				   |	ВТСорт.IDГнезда КАК IDГнезда,
				   |	ВТСорт.ТолщинаШпика КАК ТолщинаШпикаОпорос,
				   |	ВТСорт.КоличествоСосков КАК КоличествоСосков,
				   |	ВТСорт.Место КАК МестоОпорос
				   |ИЗ
				   |	ВТСорт КАК ВТСорт";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	Запрос.УстановитьПараметр("Статус", Перечисления.Статус.Супоросные); 
	//Запрос.УстановитьПараметр("ОценкаСлучки",Перечисления.ОценкаСлучки.Хорошо);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ТЧОпоросы.Очистить();
	ТЧОпоросы.Загрузить(РезультатЗапроса);

	Для Каждого Стр Из ТЧОпоросы Цикл
		НаборЗаписей = РегистрыСведений.ЖурналОпороса.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Отбор.Период.Установить(Стр.ДатаОпороса);
		НаборЗаписей.Прочитать();
		Для Каждого Записи Из НаборЗаписей Цикл
			Записи.НомерОпороса = Стр.НомерОпороса;
			Записи.Период = Стр.ДатаОпороса;
		КонецЦикла;
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
КонецПроцедуры
Процедура ПолучитьДанныеСлучкаНаСервере(НомерЖивотного, ДатаВвода, ТЧСлучка) Экспорт
	Перем Запрос, РезультатЗапроса;

	ТЧСлучка.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЖурналОсеменения.Период КАК ДатаСлучка,
				   |	ЖурналОсеменения.НомерЖивотногоХряк КАК НомерЖивотногоХряк,
				   |	ЖурналОсеменения.Работник КАК Работник,
				   |	0 КАК НомерОпороса,
				   |	ЖурналОсеменения.ОценкаСлучки КАК ОценкаСлучки,
				   |	ЖурналОсеменения.Статус КАК Статус,
				   |	ЖурналОсеменения.КодПородыХряк КАК НазваниеПородыХряк,
				   |	ЖурналОсеменения.НомерЖивотногоХряк1 КАК НомерЖивотногоХряк1,
				   |	ЖурналОсеменения.НомерЖивотногоХряк2 КАК НомерЖивотногоХряк2,
				   |	ЖурналОсеменения.КодПородыХряк1 КАК НазваниеПородыХряк1,
				   |	ЖурналОсеменения.КодПородыХряк2 КАК НазваниеПородыХряк2
				   |ИЗ
				   |	РегистрСведений.ЖурналОсеменения КАК ЖурналОсеменения
				   |ГДЕ
				   |	ЖурналОсеменения.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналОсеменения.ДатаВвода = &ДатаВвода
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	ДатаСлучка";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатСлучки  = Запрос.Выполнить().Выбрать();
	Пока РезультатСлучки.Следующий() Цикл
		Если РезультатСлучки.НомерОпороса <> 0 Тогда
			НоваяСтрока = ТЧСлучка.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатСлучки);
		Иначе
			НоваяСтрока = ТЧСлучка.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатСлучки);
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОпоросаСрезПервых.НомерОпороса КАК НомерОпороса,
						   |	ЖурналОпоросаСрезПервых.Период КАК Период
						   |ИЗ
						   |	РегистрСведений.ЖурналОпороса.СрезПервых(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПервых
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса";
			Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
			Запрос.УстановитьПараметр("ДатаОтбора", РезультатСлучки.ДатаСлучка);
			Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
			РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
			Если РезультатНомерОпороса.Количество() = 0 Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
							   |	МАКСИМУМ(ЖурналОпоросаСрезПервых.НомерОпороса) КАК НомерОпороса
							   |ИЗ
							   |	РегистрСведений.ЖурналОпороса.СрезПервых(
							   |			,
							   |			НомерЖивотного = &НомерЖивотного
							   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПервых
							   |
							   |УПОРЯДОЧИТЬ ПО
							   |	НомерОпороса";
				Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
				Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
				РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
				Если РезультатНомерОпороса.Количество() = 0 Тогда
					НоваяСтрока.НомерОпороса = 1;
				Иначе
					Пока РезультатНомерОпороса.Следующий() Цикл
						Если ЗначениеЗаполнено(РезультатНомерОпороса.НомерОпороса) Тогда
							НоваяСтрока.НомерОпороса   = РезультатНомерОпороса.НомерОпороса + 1;
						Иначе
							НоваяСтрока.НомерОпороса = 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

			Иначе
				Пока РезультатНомерОпороса.Следующий() Цикл
					НоваяСтрока.НомерОпороса   = РезультатНомерОпороса.НомерОпороса;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ФлагЗаписи = Ложь;
	НомерОпороса = 0;
	Для Каждого Стр Из ТЧСлучка Цикл 
		//Если Стр.НомерОпороса = 0 Тогда 
		НаборЗаписей = РегистрыСведений.ЖурналОсеменения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.Период.Установить(Стр.ДатаСлучка);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Для Каждого Записи Из НаборЗаписей Цикл
			Если Стр.НомерОпороса = 0 Тогда
				Стр.НомерОпороса = НомерОпороса + 1;
			Иначе
				НомерОпороса = Стр.НомерОпороса;
			КонецЕсли;
			Если Записи.НомерОпороса = 0 Тогда
				ФлагЗаписи = Истина;
			КонецЕсли;
			Записи.НомерОпороса = Стр.НомерОпороса;

		КонецЦикла;
		Если ФлагЗаписи Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьДанныеСупоросностьНаСервере(НомерЖивотного, ДатаВвода, ТЧСупоросность, НомерОпороса) Экспорт

	Перем Запрос, РезультатЗапроса;

	ТЧСупоросность.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Супоросность.Период КАК ДатаУЗИ,
				   |	Супоросность.РезультатУЗИ КАК РезультатУЗИ,
				   |	Супоросность.НомерОпороса КАК НомерОпороса,
				   |	Супоросность.Работник КАК РаботникСупоросность,
				   |	Супоросность.ТолщинаШпика КАК ТолщинаШпикаСупоросность,
				   |	Супоросность.Место КАК МестоСупоросность
				   |ИЗ
				   |	РегистрСведений.Супоросность КАК Супоросность
				   |ГДЕ
				   |	Супоросность.НомерЖивотного = &НомерЖивотного
				   |	И Супоросность.ДатаВвода = &ДатаВвода
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	ДатаУЗИ";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатСупоросность  = Запрос.Выполнить().Выбрать();
	Пока РезультатСупоросность.Следующий() Цикл
		Если РезультатСупоросность.НомерОпороса <> 0 Тогда
			НоваяСтрока = ТЧСупоросность.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатСупоросность);
		Иначе
			НоваяСтрока = ТЧСупоросность.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатСупоросность);
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОпоросаСрезПервых.НомерОпороса КАК НомерОпороса,
						   |	ЖурналОпоросаСрезПервых.Период КАК Период
						   |ИЗ
						   |	РегистрСведений.ЖурналОпороса.СрезПервых(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПервых
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса";
			Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
			Запрос.УстановитьПараметр("ДатаОтбора", РезультатСупоросность.ДатаУЗИ);
			Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
			РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
			Пока РезультатНомерОпороса.Следующий() Цикл
				НоваяСтрока.НомерОпороса   = РезультатНомерОпороса.НомерОпороса;
			КонецЦикла;
			Если РезультатНомерОпороса.НомерОпороса = Неопределено Тогда
				НоваяСтрока.НомерОпороса = НомерОпороса;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьДанныеАбортаНаСервере(НомерЖивотного, ДатаВвода, ТЧАборт, НомерОпороса) Экспорт

	Перем Запрос, РезультатЗапроса;

	ТЧАборт.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Аборт.Период КАК ДатаАборта,
				   |	Аборт.Мачеха КАК Мачеха,
				   |	Аборт.НомерОпороса КАК НомерОпороса
				   |ИЗ
				   |	РегистрСведений.Аборт КАК Аборт
				   |ГДЕ
				   |	Аборт.НомерЖивотного = &НомерЖивотного
				   |	И Аборт.ДатаВвода = &ДатаВвода";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатАборт  = Запрос.Выполнить().Выбрать();
	Пока РезультатАборт.Следующий() Цикл
		Если РезультатАборт.НомерОпороса <> 0 Тогда
			НоваяСтрока = ТЧАборт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатАборт);
		Иначе
			НоваяСтрока = ТЧАборт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатАборт);
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОпоросаСрезПервых.НомерОпороса КАК НомерОпороса,
						   |	ЖурналОпоросаСрезПервых.Период КАК Период
						   |ИЗ
						   |	РегистрСведений.ЖурналОпороса.СрезПервых(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПервых
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса";
			Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
			Запрос.УстановитьПараметр("ДатаОтбора", РезультатАборт.ДатаАборта);
			Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
			РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
			Пока РезультатНомерОпороса.Следующий() Цикл
				НоваяСтрока.НомерОпороса   = РезультатНомерОпороса.НомерОпороса;
			КонецЦикла;
			Если РезультатНомерОпороса.НомерОпороса = Неопределено Тогда
				НоваяСтрока.НомерОпороса = НомерОпороса + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если РезультатАборт.Количество() > 0 Тогда
		НомерОпороса = НомерОпороса + 1;
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьДанныеПодсосныеПоросятаНаСервере(НомерЖивотного, ДатаВвода, ТЧПодсосныеПоросята) Экспорт

	Перем Запрос, РезультатЗапроса;

	ТЧПодсосныеПоросята.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ПадежПоросят.Период КАК ДатаПадежа,
				   |	ПадежПоросят.НомерОпороса КАК НомерОпороса,
				   |	ПадежПоросят.НомерЖивотного КАК НомерЖивотного
				   |ИЗ
				   |	РегистрСведений.ПадежПоросят КАК ПадежПоросят
				   |ГДЕ
				   |	ПадежПоросят.НомерЖивотного = &НомерЖивотного
				   |	И ПадежПоросят.ДатаВвода = &ДатаВвода";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатПадеж  = Запрос.Выполнить().Выбрать();
	Пока РезультатПадеж.Следующий() Цикл
		Если РезультатПадеж.НомерОпороса = 0 Тогда
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОпоросаСрезПервых.НомерОпороса КАК НомерОпороса,
						   |	ЖурналОпоросаСрезПервых.Период КАК Период
						   |ИЗ
						   |	РегистрСведений.ЖурналОпороса.СрезПервых(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПервых
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса";
			Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
			Запрос.УстановитьПараметр("ДатаОтбора", РезультатПадеж.ДатаПадежа);
			Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
			РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
			Пока РезультатНомерОпороса.Следующий() Цикл
				НаборЗаписей = РегистрыСведений.ПадежПоросят.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
				НаборЗаписей.Отбор.Период.Установить(РезультатПадеж.ДатаПадежа);
				НаборЗаписей.Прочитать();
				Для Каждого Записи Из НаборЗаписей Цикл
					Записи.НомерОпороса = РезультатНомерОпороса.НомерОпороса;
				КонецЦикла;
				НаборЗаписей.Записать();
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ПадежПоросят.КоличествоМертвых КАК Падеж,
				   |	ПереводПоросят.КоличествоПереведенных КАК Перевод,
				   |	ЖурналОсеменения.НомерОпороса КАК НомерОпороса
				   |ИЗ
				   |	РегистрСведений.ЖурналОсеменения КАК ЖурналОсеменения
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПереводПоросят КАК ПереводПоросят
				   |		ПО ЖурналОсеменения.НомерЖивотного = ПереводПоросят.НомерЖивотного
				   |			И ЖурналОсеменения.НомерОпороса = ПереводПоросят.НомерОпороса
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПадежПоросят КАК ПадежПоросят
				   |		ПО ЖурналОсеменения.НомерЖивотного = ПадежПоросят.НомерЖивотного
				   |			И ЖурналОсеменения.НомерОпороса = ПадежПоросят.НомерОпороса
				   |ГДЕ
				   |	ЖурналОсеменения.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналОсеменения.ДатаВвода = &ДатаВвода
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	НомерОпороса";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ТЧПодсосныеПоросята.Очистить();
	ТЧПодсосныеПоросята.Загрузить(РезультатЗапроса);

КонецПроцедуры

Процедура ПолучитьДанныеОтъемаНаСервере(НомерЖивотного, ДатаВвода, ТЧОтъем) Экспорт

	Перем Запрос, РезультатЗапроса;

	ТЧОтъем.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЖурналОтъема.Период КАК ДатаОтъема,
				   |	ЖурналОтъема.Мачеха КАК Мачеха,
				   |	ЖурналОтъема.КоличествоОтъемышей КАК КоличествоОтъемышей,
				   |	ЖурналОтъема.МассаВсего КАК МассаВсего,
				   |	ЖурналОтъема.СреднийВес КАК СреднийВес,
				   |	0 КАК НомерОпороса,
				   |	ЖурналОтъема.ВозрастПриПодсадке КАК ВозрастПриПодсадке,
				   |	ЖурналОтъема.ТолщинаШпика КАК ТолщинаШпикаОтъем
				   |ИЗ
				   |	РегистрСведений.ЖурналОтъема КАК ЖурналОтъема
				   |ГДЕ
				   |	ЖурналОтъема.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналОтъема.ДатаВвода = &ДатаВвода
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	ДатаОтъема";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатОтъем  = Запрос.Выполнить().Выбрать();
	Пока РезультатОтъем.Следующий() Цикл
		Если РезультатОтъем.НомерОпороса <> 0 Тогда
			НоваяСтрока = ТЧОтъем.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатОтъем);
		Иначе
			НоваяСтрока = ТЧОтъем.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатОтъем);
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОпоросаСрезПоследних.НомерОпороса КАК НомерОпороса
						   |ПОМЕСТИТЬ ВТОпорос
						   |ИЗ
						   |	РегистрСведений.ЖурналОпороса.СрезПоследних(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОпоросаСрезПоследних
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса УБЫВ
						   |;
						   |
						   |////////////////////////////////////////////////////////////////////////////////
						   |ВЫБРАТЬ ПЕРВЫЕ 1
						   |	ЖурналОсемененияСрезПоследних.НомерОпороса КАК НомерОпороса
						   |ПОМЕСТИТЬ ВТОсеменение
						   |ИЗ
						   |	РегистрСведений.ЖурналОсеменения.СрезПоследних(
						   |			&ДатаОтбора,
						   |			НомерЖивотного = &НомерЖивотного
						   |				И ДатаВвода = &ДатаВвода) КАК ЖурналОсемененияСрезПоследних
						   |
						   |УПОРЯДОЧИТЬ ПО
						   |	НомерОпороса УБЫВ
						   |;
						   |
						   |////////////////////////////////////////////////////////////////////////////////
						   |ВЫБРАТЬ
						   |	ВЫБОР
						   |		КОГДА ВТОпорос.НомерОпороса >= ВТОсеменение.НомерОпороса
						   |			ТОГДА ВТОпорос.НомерОпороса
						   |		ИНАЧЕ ВТОсеменение.НомерОпороса
						   |	КОНЕЦ КАК НомерОпороса
						   |ИЗ
						   |	ВТОпорос КАК ВТОпорос,
						   |	ВТОсеменение КАК ВТОсеменение";
			Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
			Запрос.УстановитьПараметр("ДатаОтбора", РезультатОтъем.ДатаОтъема - 1);
			Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
			РезультатНомерОпороса = Запрос.Выполнить().Выбрать();
			Пока РезультатНомерОпороса.Следующий() Цикл
				НоваяСтрока.НомерОпороса   = РезультатНомерОпороса.НомерОпороса;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	Для Каждого Стр Из ТЧОтъем Цикл
		НаборЗаписей = РегистрыСведений.ЖурналОтъема.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НомерЖивотного.Установить(НомерЖивотного);
		НаборЗаписей.Отбор.Период.Установить(Стр.ДатаОтъема);
		НаборЗаписей.Отбор.ДатаВвода.Установить(ДатаВвода);
		НаборЗаписей.Прочитать();
		Для Каждого Записи Из НаборЗаписей Цикл
			Записи.НомерОпороса 	   = Стр.НомерОпороса;
			Записи.ДатаВвода	       = ДатаВвода;
			Записи.Период			   = Стр.ДатаОтъема;
			Записи.КоличествоОтъемышей = Стр.КоличествоОтъемышей;
			Записи.МассаВсего          = Стр.МассаВсего;
			Записи.СреднийВес          = Стр.СреднийВес;
			Записи.ВозрастПриПодсадке  = Стр.ВозрастПриПодсадке;
		КонецЦикла;
		НаборЗаписей.Записать();

	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьКоличествоОпоросовНаСервере(НомерЖивотного, ДатаВвода, НомерОпороса) Экспорт

	Перем Запрос, РезультатЗапроса;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЖурналОпоросаСрезПоследних.НомерОпороса) КАК НомерОпороса
	//|ИЗ
	//|	РегистрСведений.ЖурналОпороса.СрезПоследних(, ) КАК ЖурналОпоросаСрезПоследних
	//|ГДЕ
	//|	ЖурналОпоросаСрезПоследних.НомерЖивотного = &НомерЖивотного
	//|	И (ЖурналОпоросаСрезПоследних.Живорожденные > 0
	//|			ИЛИ ЖурналОпоросаСрезПоследних.Мертвые > 0)
	//|	И ЖурналОпоросаСрезПоследних.ДатаВвода = &ДатаВвода";  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЖурналОсеменения.НомерОпороса) КАК НомерОпороса
				   |ИЗ
				   |	РегистрСведений.ЖурналОсеменения КАК ЖурналОсеменения
				   |ГДЕ
				   |	ЖурналОсеменения.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналОсеменения.ДатаВвода = &ДатаВвода";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		НомерОпороса = РезультатЗапроса.НомерОпороса;
	КонецЦикла;

КонецПроцедуры

Процедура ПолучитьДанныеВакцинацииНаСервере(НомерЖивотного, ДатаВвода, ТЧВакцинация) Экспорт

	Перем Запрос, РезультатЗапроса;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Вакцинация.Период КАК ДатаВакцинации,
				   |	Вакцинация.Пролечено КАК Пролечено
				   |ИЗ
				   |	РегистрСведений.Вакцинация КАК Вакцинация
				   |ГДЕ
				   |	Вакцинация.НомерЖивотного = &НомерЖивотного
				   |	И Вакцинация.ДатаВвода = &ДатаВвода";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ТЧВакцинация.Очистить();
	ТЧВакцинация.Загрузить(РезультатЗапроса);

КонецПроцедуры

Процедура ЗаполнитьОбщуюТаблицу(Запись, ТЧОбщая, ТЧСлучка, ТЧСупоросность, ТЧАборт, ТЧОпоросы, ТЧОтъем, ТЧБрак,
	КарточкаСвиноматки = Истина) Экспорт
	ТЧОбщая.Очистить();
	Для Каждого Стр Из ТЧСлучка Цикл
		НоваяСтрока = ТЧОбщая.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
	КонецЦикла;
	Для Каждого Стр Из ТЧСупоросность Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		СтрокаТаблицы = Неопределено;
		Для Каждого СтрМассив Из РезультатПоиска Цикл
			Если СтрокаТаблицы = Неопределено И Стр.ДатаУЗИ >= СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			ИначеЕсли СтрокаТаблицы <> Неопределено И СтрМассив.ДатаСлучка > СтрокаТаблицы.ДатаСлучка И Стр.ДатаУЗИ
				>= СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			КонецЕсли;
		КонецЦикла;
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Стр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из ТЧАборт Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		СтрокаТаблицы = Неопределено;
		Для Каждого СтрМассив Из РезультатПоиска Цикл
			Если СтрокаТаблицы = Неопределено И Стр.ДатаАборта > СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			ИначеЕсли СтрокаТаблицы <> Неопределено И СтрМассив.ДатаСлучка > СтрокаТаблицы.ДатаСлучка И Стр.ДатаАборта
				> СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			КонецЕсли;
		КонецЦикла;
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Стр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из ТЧОпоросы Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		СтрокаТаблицы = Неопределено;
		Для Каждого СтрМассив Из РезультатПоиска Цикл
			Если СтрокаТаблицы = Неопределено И Стр.ДатаОпороса > СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			ИначеЕсли СтрокаТаблицы <> Неопределено И СтрМассив.ДатаСлучка > СтрокаТаблицы.ДатаСлучка И Стр.ДатаОпороса
				> СтрМассив.ДатаСлучка Тогда
				СтрокаТаблицы = СтрМассив;
			КонецЕсли;
		КонецЦикла;
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Стр);
			СтрокаТаблицы.МассаВсего 		= 0;
			СтрокаТаблицы.СреднийВес		= 0;
			СтрокаТаблицы.МассаВсегоОпорос 	= Стр.МассаВсего;
			СтрокаТаблицы.СреднийВесОпорос	= Стр.СреднийВес;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из ТЧБрак Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		Для Каждого СтрМассив Из РезультатПоиска Цикл
			СтрМассив.Брак = Стр.Брак;
			СтрМассив.ДатаБрака = Стр.ДатаБрака;
		КонецЦикла;
	КонецЦикла;
	Мачеха = Ложь;
	Для Каждого Стр Из ТЧОтъем Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		СтрокаТаблицы = Неопределено;

		Если Не Мачеха Тогда
			Для Каждого СтрМассив Из РезультатПоиска Цикл
				Если СтрокаТаблицы = Неопределено И (Стр.ДатаОтъема >= СтрМассив.ДатаОпороса) Тогда
					СтрокаТаблицы = СтрМассив;
				ИначеЕсли (Стр.ДатаОтъема < СтрМассив.ДатаОпороса) Тогда
					Сообщить("Дата опороса (" + СтрМассив.ДатаОпороса + ") больше даты отъема(" + Стр.ДатаОтъема + ") "
						+ Запись.НомерЖивотного);
					СтрокаТаблицы = СтрМассив;
				ИначеЕсли СтрокаТаблицы <> Неопределено И СтрМассив.ДатаОпороса > СтрокаТаблицы.ДатаОпороса
					И Стр.ДатаОтъема >= СтрМассив.ДатаОпороса Тогда
					СтрокаТаблицы = СтрМассив;
				КонецЕсли;
			КонецЦикла;
			Если СтрокаТаблицы <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Стр);
			КонецЕсли;
		Иначе
			НоваяСтрока = ТЧОбщая.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		КонецЕсли;
		Мачеха = Стр.Мачеха;
	КонецЦикла;
	ТЧОбщая.Сортировать("НомерОпороса ВОЗР");
	ПредыдущаяСтрока = Неопределено;
	ВсегоПотеряноКормодней = 0;
	ПредыдущаяДатаОтъема =0;
	Для Каждого Стр Из ТЧОбщая Цикл
		РезультатПоиска = ТЧОбщая.НайтиСтроки(Новый Структура("НомерОпороса", Стр.НомерОпороса));
		Если Стр.ДатаОпороса <> Дата(1, 1, 1) Тогда
			Стр.ПериодЛактации = (НачалоДня(Стр.ДатаОпороса) - НачалоДня(Стр.ДатаСлучка)) / (24 * 60 * 60);
		КонецЕсли;
		Если Стр.ДатаОтъема <> Дата(1, 1, 1) Тогда
			Если Стр.ДатаОпороса = Дата(1, 1, 1) Тогда
				Если ПредыдущаяДатаОтъема <> 0 Тогда
					Стр.ПодсосныйПериод = (НачалоДня(Стр.ДатаОтъема) - НачалоДня(ПредыдущаяДатаОтъема)) / (24 * 60 * 60);
					Стр.ВозрастПоросят = Стр.ПодсосныйПериод + Стр.ВозрастПриПодсадке;
				КонецЕсли;
			Иначе
				Стр.ПодсосныйПериод = (НачалоДня(Стр.ДатаОтъема) - НачалоДня(Стр.ДатаОпороса)) / (24 * 60 * 60);
				Стр.ВозрастПоросят = Стр.ПодсосныйПериод + Стр.ВозрастПриПодсадке;
			КонецЕсли;
			ПредыдущаяДатаОтъема = Стр.ДатаОтъема;
		КонецЕсли;
		Если ПредыдущаяСтрока <> Неопределено Тогда
			Если Стр.ДатаСлучка <> Дата(1, 1, 1) Тогда
				Если ПредыдущаяСтрока.ДатаОтъема = Дата(1, 1, 1) Тогда
					ПредыдущаяСтрока.ПустыеДни = (НачалоДня(Стр.ДатаСлучка) - НачалоДня(ПредыдущаяСтрока.ДатаСлучка))
						/ (24 * 60 * 60);
				Иначе
					ПредыдущаяСтрока.ПустыеДни = (НачалоДня(Стр.ДатаСлучка) - НачалоДня(ПредыдущаяСтрока.ДатаОтъема))
						/ (24 * 60 * 60);
				КонецЕсли;
			КонецЕсли;
			ВсегоПотеряноКормодней = ВсегоПотеряноКормодней + ПредыдущаяСтрока.ПустыеДни;
			ПредыдущаяСтрока.ВсегоПотеряноКормодней = ВсегоПотеряноКормодней;
		КонецЕсли;
		ПредыдущаяСтрока = Стр;
	КонецЦикла;
	Если КарточкаСвиноматки И Запись.ДатаВыбытие <> Дата(1, 1, 1) И ПредыдущаяСтрока <> Неопределено Тогда
		Если ПредыдущаяСтрока.ДатаОтъема = Дата(1, 1, 1) Тогда
			ПредыдущаяСтрока.ПустыеДни = (НачалоДня(Запись.ДатаВыбытие) - НачалоДня(ПредыдущаяСтрока.ДатаСлучка)) / (24
				* 60 * 60);
		Иначе
			ПредыдущаяСтрока.ПустыеДни = (НачалоДня(Запись.ДатаВыбытие) - НачалоДня(ПредыдущаяСтрока.ДатаОтъема)) / (24
				* 60 * 60);
		КонецЕсли;
	КонецЕсли;

	КоличествоСтрок = ТЧОбщая.Количество();
	Если КоличествоСтрок > 0 Тогда
		ПоследняяСтрока = ТЧОбщая[КоличествоСтрок - 1];
		Если ПоследняяСтрока.ДатаАборта = '00010101000000' Тогда
			Если ПоследняяСтрока.ДатаОпороса = '00010101000000' И ПоследняяСтрока.ДатаСлучка <> '00010101000000' Тогда
				ПоследняяСтрока.ДатаОпороса = ПоследняяСтрока.ДатаСлучка
					+ _НастройкиКонфигурацииНаСервере.ПолучитьДниСупоросностиНаСервере() * (24 * 60 * 60);
			КонецЕсли;
		Иначе
			ПоследняяСтрока.ДатаОпороса = '00010101000000';
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьДанныеБракНаСервере(НомерЖивотного, ДатаВвода, ТЧБрак) Экспорт
	Перем Запрос, РезультатЗапроса;

	ТЧБрак.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЖурналБрака.НомерОпороса КАК НомерОпороса,
				   |	ЖурналБрака.Брак КАК Брак,
				   |	ЖурналБрака.Период КАК ДатаБрака
				   |ИЗ
				   |	РегистрСведений.ЖурналБрака КАК ЖурналБрака
				   |ГДЕ
				   |	ЖурналБрака.НомерЖивотного = &НомерЖивотного
				   |	И ЖурналБрака.ДатаВвода = &ДатаВвода";
	Запрос.УстановитьПараметр("НомерЖивотного", НомерЖивотного);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаВвода);
	РезультатБрак  = Запрос.Выполнить().Выбрать();
	Пока РезультатБрак.Следующий() Цикл
		НоваяСтрока = ТЧБрак.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатБрак);
	КонецЦикла;

КонецПроцедуры