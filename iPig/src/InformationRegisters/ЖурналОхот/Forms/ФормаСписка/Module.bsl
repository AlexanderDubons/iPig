

&НаКлиенте
Процедура ПериодОтбораПриИзменении(Элемент)
		Перем ЭлементыОтбора;
	
	Список.Отбор.Элементы.Очистить(); 
	ЭлементыГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементыГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;  
	ЭлементыГруппаОтбора.Использование = Истина;
	
	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= НЕ (ПериодОтбора.ДатаНачала = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Период");
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаНачала;       
	
	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= НЕ (ПериодОтбора.ДатаОкончания = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Период");
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаОкончания;       
	
	 
	КоличествоЗаписей = СписокВТЗнаСервере();
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере()
	// реквизит1 - динамический список на форме  
	Если Статистика Тогда
		Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
		Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
		МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		
		МассивСсылок = ТаблицаРезультат.ВыгрузитьКолонку(0);  // выгружаем ссылки в массив для передачи клиенту
		Возврат "Кол. записей: " +  Строка(массивСсылок.Количество()); 
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Изменение = ВосстановитьЗначениеСервер("ЖурналОпоросов.ФормаСписка", "Изменение"); 
	Если Изменение  <> Неопределено И Изменение Тогда
		КоличествоЗаписей = СписокВТЗнаСервере(); 
		ПоместитьВХранилище("ЖурналОпоросов.ФормаСписка", "Изменение", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	ХранилищеСистемныхНастроек.Сохранить("ЖурналОпоросов.ФормаСписка", "Изменение", Истина); 
КонецПроцедуры   


&НаСервереБезКонтекста
Процедура ПоместитьВХранилище(ИмяОбъект, ИмяПараметр, Значение)
	
	ХранилищеСистемныхНастроек.Сохранить(ИмяОбъект, ИмяПараметр, Значение); 
	
КонецПроцедуры   

&НаСервереБезКонтекста
Функция ВосстановитьЗначениеСервер(ИмяОъект, ИмяПараметр); 
	Возврат ХранилищеСистемныхНастроек.Загрузить(ИмяОъект,ИмяПараметр);
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
 
	
КонецПроцедуры


&НаКлиенте
Процедура Статистика(Команда)
	Статистика = НЕ Статистика;
	КоличествоЗаписей = СписокВТЗнаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ГрупповойВводОсеменения(Команда)
	ОткрытьФорму("РегистрСведений.ЖурналОпоросов.Форма.ФормаВводаДанных",,ЭтаФорма);
КонецПроцедуры

