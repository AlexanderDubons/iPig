&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	КарточкаСвиноматки.НомерЖивотного КАК НомерЖивотного,
	//	|	КарточкаСвиноматки.КоличествоОтъемышей КАК КоличествоОтъемышей,
	//	|	КарточкаСвиноматки.МассаВсего КАК МассаВсего,
	//	|	КарточкаСвиноматки.СреднийВес КАК СреднийВес,
	//	|	КарточкаСвиноматки.ДатаОтъема КАК ДатаОтъема,
	//	|	КарточкаСвиноматки.МачехаОтъем КАК МачехаОтъем
	//	|ИЗ
	//	|	РегистрСведений.КарточкаСвиноматки КАК КарточкаСвиноматки
	//	|ГДЕ
	//	|	КарточкаСвиноматки.НомерЖивотного = &НомерЖивотного";
	//
	//Запрос.УстановитьПараметр("НомерЖивотного",ЭлементСписок.НомерЖивотного);
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	//Если Список.НомерЖивотного = ВыборкаДетальныеЗаписи.НомерЖивотного Тогда
	//		
	//		//Список.НомерЖивотного = ВыборкаДетальныеЗаписи.НомерЖивотного;
	//		Список.ДатаОтъема = ВыборкаДетальныеЗаписи.ДатаОтъема;
	//		Список.Мачеха = ВыборкаДетальныеЗаписи.МачехаОтъем;
	//		Список.КоличествоОтъемышей = ВыборкаДетальныеЗаписи.КоличествоОтъемышей;
	//		Список.МассаВсего = ВыборкаДетальныеЗаписи.МассаВсего;
	//	    Список.СреднийВес = ВыборкаДетальныеЗаписи.СреднийВес;
	//	//КонецЕсли;
	//				
	//КонецЦикла;	

КонецПроцедуры
&НаКлиенте
Процедура ПериодОтбораПриИзменении(Элемент)
	Перем ЭлементыОтбора;

	Список.Отбор.Элементы.Очистить();
	ЭлементыГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементыГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементыГруппаОтбора.Использование = Истина;

	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= Не (ПериодОтбора.ДатаНачала = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Период");
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаНачала;

	ЭлементыОтбора = ЭлементыГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыОтбора.Использование 	= Не (ПериодОтбора.ДатаОкончания = '00010101000000');
	ЭлементыОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Период");
	ЭлементыОтбора.ВидСравнения 	= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементыОтбора.ПравоеЗначение   = ПериодОтбора.ДатаОкончания;
	КоличествоЗаписей = "Кол. отъемов: " + СписокВТЗнаСервере();
КонецПроцедуры

&НаСервере
Функция СписокВТЗнаСервере()
// реквизит1 - динамический список на форме
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип(
		"ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	МассивСсылок = ТаблицаРезультат.ВыгрузитьКолонку(0);  // выгружаем ссылки в массив для передачи клиенту
	КоличествоОтъемов = массивСсылок.Количество();

	КоличествоОтъемышейКоличество = 0;
	МассаВсегоКоличество = 0;
	СреднийВесКоличество = 0;

	Если ТаблицаРезультат.Колонки.Найти("КоличествоОтъемышей") <> Неопределено Тогда
		КоличествоОтъемышейКоличество = ТаблицаРезультат.Итог("КоличествоОтъемышей");
	КонецЕсли;
	Если ТаблицаРезультат.Колонки.Найти("МассаВсего") <> Неопределено Тогда
		МассаВсегоКоличество = ТаблицаРезультат.Итог("МассаВсего");
	КонецЕсли;
	Если ТаблицаРезультат.Колонки.Найти("СреднийВес") <> Неопределено Тогда
		СреднийВесКоличество = ТаблицаРезультат.Итог("СреднийВес");
	КонецЕсли;

	Если КоличествоОтъемов > 0 Тогда
		КоличествоОтъемышей = Строка(КоличествоОтъемышейКоличество) + " / " + Строка(Окр(КоличествоОтъемышейКоличество
			/ КоличествоОтъемов, 2));
		МассаВсего          = Строка(МассаВсегоКоличество) + " / " + Строка(Окр(МассаВсегоКоличество
			/ КоличествоОтъемов, 2));
		СреднийВес          = Строка(СреднийВесКоличество) + " / " + Строка(Окр(СреднийВесКоличество
			/ КоличествоОтъемов, 2));
	КонецЕсли;

	Возврат КоличествоОтъемов;
КонецФункции
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	КоличествоЗаписей = "Кол. отъемов: " + СписокВТЗнаСервере();
КонецПроцедуры
&НаКлиенте
Процедура ГрупповойВводОтъема(Команда)
	ОткрытьФорму("РегистрСведений.ЖурналОтъема.Форма.ФормаВводаДанных", , ЭтаФорма);
КонецПроцедуры
&НаКлиенте
Процедура СреднийВесПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	УдалениеНомерЖивотного 	= Элемент.ТекущиеДанные.НомерЖивотного;
	УдалениеДатаВвода		= Элемент.ТекущиеДанные.ДатаВвода;
	УдалениеДатаСобытия		= Элемент.ТекущиеДанные.Период;
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	_ОбработкаОповещенияНаКлиенте.ОткрытьФормуСвиноматки(УдалениеНомерЖивотного, УдалениеДатаВвода);
	_НастройкиКонфигурацииНаСервере.ЗаписьДанныхРегистраВЖурналРегистрацийПриУдалении(Элемент.ТекущаяСтрока,
		УдалениеНомерЖивотного, УдалениеДатаСобытия, "Удаление");
КонецПроцедуры
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	МенюВыбора = Новый СписокЗначений;
	МенюВыбора.Добавить(0, "Открыть карточку отъема");
	МенюВыбора.Добавить(1, "Открыть карточку свиноматки");
	//@skip-check undefined-function
	ВыбСтрокаМеню = ВыбратьИзМеню(МенюВыбора);
	Попытка
		Если ВыбСтрокаМеню.Значение = 1 Тогда
			СтандартнаяОбработка = Ложь;
			Попытка
				НомерЖивотного 	= Элемент.ТекущиеДанные.НомерЖивотного;
				ДатаВвода		= Элемент.ТекущиеДанные.ДатаВвода;
				ОткрытьФорму("РегистрСведений.КарточкаСвиноматки.Форма.ФормаЗаписи",
					Новый Структура("Ключ, ФормаОткрыта", _НастройкиКонфигурацииНаСервере.ПолучитьКлючЗаписи(
					НомерЖивотного, ДатаВвода), Ложь), , , , , , );
			Исключение 
				//Сообщить(Строка(Строка.НомерЖивотного)+"_"+ Строка.Период);
			КонецПопытки;
		КонецЕсли;
	Исключение
		СтандартнаяОбработка = Ложь;
	КонецПопытки;
КонецПроцедуры